@model sol_Job_Bank.Models.Applicant

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Applicant</h4>
    <hr />
    @{
        if (Model.ApplicantPhoto != null)
        {
            @:<div>
                if (Model.ApplicantPhoto.PhotoContentFull.Content != null && Model.ApplicantPhoto.PhotoContentFull.MimeType.Contains("image"))
                {
                    string imageBase64 = Convert.ToBase64String(Model.ApplicantPhoto.PhotoContentFull.Content);
                    string imageSrc = string.Format("data:" + Model.ApplicantPhoto.PhotoContentFull.MimeType + ";base64,{0}", imageBase64);
                    <img src="@imageSrc" alt="Profile Picture of @Model.FullName" title="Profile Picture of @Model.FullName" class="img-fluid rounded" />
                }
            @:</div><hr />
        }
    }
    <div class="row">
        <div class="col-md-5">
            <dl class="row">
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.FirstName)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.FirstName)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.MiddleName)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.MiddleName)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.LastName)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.LastName)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.SIN)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.SIN)
                </dd>
            </dl>
        </div>
        <div class="col-md-6">
            <dl class="row">
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Phone)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Phone)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.eMail)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.eMail)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.RetrainingProgram)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.RetrainingProgram.Name)
                </dd>
            </dl>
        </div>
    </div>
    <hr />
    @if (Model.ApplicantDocuments.Count > 0)
    {
        <h5>Document List For: @Model.FullName</h5>
        <div class="offset-1">
            <table class="table">
                <thead>
                    <tr>
                        <th>File Name</th>
                        <th>Description</th>
                    </tr>
                </thead>
                @foreach (var d in Model.ApplicantDocuments)
                {
                    <tr>
                        <td><a asp-action="Download" asp-route-id="@d.ID">@d.FileName</a></td>
                        <td>@d.Description</td>
                    </tr>
                }
            </table>
        </div>
    }
    @if (Model.Applications.Count > 0)
    {
        <h5>Applicaitons Submitted by: @Model.FullName</h5>
        <div class="offset-1">
            @foreach (var a in Model.Applications)
            {
                @a.Posting.PostingSummary <br />
            }
        </div>
    }

</div>
<br />
<div>
    @if (!(User.IsInRole("Staff") && User.Identity.Name != Model.CreatedBy))
    {
        <a asp-action="Edit" asp-route-id="@Model.ID">Edit</a> @:|
    }
    <a href='@ViewData["returnURL"]'>Back to List of Applicants</a>
</div>
